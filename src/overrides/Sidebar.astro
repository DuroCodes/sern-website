---
// Heavily inspired from https://github.com/lorenzolewis/starlight-multi-sidebar/blob/main/src/components/Sidebar.astro
import type { Props } from "@astrojs/starlight/props";
import StarlightSidebar from "@astrojs/starlight/components/Sidebar.astro";
import { AstroError } from "astro/errors";

const sidebarConfig: [string, boolean, Props][] = Astro.props.sidebar.map(
  (s) => {
    if (s.type !== "group") {
      throw new AstroError(
        `\`${s.label}\` cannot be used with multiple Starlight sidebars.

  Each top-level \`sidebar\` item in the Starlight config must be either a group or autogenerated.

  See https://starlight.astro.build/guides/sidebar/#groups and https://starlight.astro.build/guides/sidebar/#autogenerated-groups`,
      );
    }

    const isCurrent = (s: (typeof Astro.props.sidebar)[number]) =>
      s.type === "link" ? s.isCurrent : s.entries.some(isCurrent);

    return [s.label, isCurrent(s), { ...Astro.props, sidebar: [...s.entries] }];
  },
);
---

<div class="__collapse">
  {
    sidebarConfig.map(([label, isCurrent, props]) => (
      <>
        <input
          type="radio"
          name="sidebar"
          role="tab"
          aria-label={label}
          checked={isCurrent}
        />
        <div class="__collapse-content">
          <StarlightSidebar {...props}>
            <slot />
          </StarlightSidebar>
        </div>
      </>
    ))
  }
</div>

<style>
  .__collapse {
    display: grid;
  }
  .__collapse > input {
    position: relative;
    display: inline-flex;
    grid-row-start: 1;
    appearance: none;

    border-radius: 0.25rem;
    padding: 0.2em 0.5rem;
    line-height: 1.4;
    font-size: var(--sl-text-lg);
    font-weight: 600;
    cursor: pointer;
    user-select: none;
    margin-bottom: var(--sl-nav-pad-y);
    size: 100%;
  }

  .__collapse > input::after {
    content: attr(aria-label);
  }

  .__collapse > input:checked {
    color: var(--sl-color-text-invert);
    background-color: var(--sl-color-text-accent);
  }

  .__collapse > .__collapse-content {
    display: none;
    grid-column-start: 1;
    grid-column-end: span 999;
    grid-row-start: 2;
  }
  .__collapse > input:checked + .__collapse-content {
    display: block;
  }
</style>
