"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hierarchy = void 0;
const markdown_1 = require("../../../libs/markdown");
/**
 * @category Member Partials
 */
function hierarchy(model, options) {
    const md = [];
    const parent = !model.isTarget
        ? model.types
            .map((hierarchyType) => {
            return this.helpers.getHierarchyType(hierarchyType, {
                isTarget: model.isTarget || false,
            });
        })
            .join('.')
        : null;
    if (model.next) {
        if (parent) {
            md.push((0, markdown_1.heading)(options.headingLevel, this.getText('label.extends')));
            md.push(`- ${parent}`);
        }
        else {
            md.push((0, markdown_1.heading)(options.headingLevel, this.getText('label.extendedBy')));
            const lines = [];
            model.next.types.forEach((hierarchyType) => {
                lines.push(this.helpers.getHierarchyType(hierarchyType, {
                    isTarget: model.next?.isTarget || false,
                }));
            });
            md.push((0, markdown_1.unorderedList)(lines));
        }
    }
    return md.join('\n\n');
}
exports.hierarchy = hierarchy;
